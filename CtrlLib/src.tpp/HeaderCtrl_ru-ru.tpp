topic "Класс HeaderCtrl (ЗагКтрл)";
[i448;a25;kKO9;*@(64)2 $$1,0#37138531426314131252341829483380:class]
[l288;2 $$2,0#27521748481378242620020725143825:desc]
[a83;*R6 $$3,0#31310162474203024125188417583966:caption]
[l288;i1121;b17;O9;~~~.1408;2 $$4,0#10431211400427159095818037425705:param]
[i448;a25;kKO9;*@(64)2 $$5,0#37138531426314131252341829483370:item]
[*+117 $$6,6#14700283458701402223321329925657:header]
[0 $$7,0#96390100711032703541132217272105:end]
[2 $$0,0#00000000000000000000000000000000:Default]
[{_}%RU-RU 
[ {{10000@3 [s3;~~~64;%- [%RU-RUA@7$3;4 Класс][%RU-RUA$3;4  ][@7$3 HeaderCtrl 
(ЗагКтрл)]]}}&]
[s0;:Upp`:`:HeaderCtrl`:`:class:%- [@(0.0.255)3 class][3 _][*3 HeaderCtrl][3 _:_][@(0.0.255)3 pu
blic][3 _][*@3;3 Ctrl][3 , ][@(0.0.255)3 public][3 _][*@3;3 CtrlFrame]&]
[s2; &]
[s2; 
@@image:1350&150
(A9gAGAAAAOj/AAAAAHic7ZnBDcIwDEWZmD0YgQ16QFxBYgEODMAKSN0BTlTgxG7SOo6TfuuJQxrqfv6Xg9Tx9RwBAAB82R/OAFSB5PCNQpkXl8Pqk9me03CE8FrdkUMndmxWOHLoyo7NCs/N4e6/uNsKlxZA7qZ780Q7EoW3S7rw8FOre+48nO1ewikb9+Wx0GUCZeGcZOSwih2Wz1CFPnJIDizhCIte4laIZKI9bEq+qGhHVHi09aw0n6TnsIlzOXw8zjthc+gvt0hWyB5FO2Qts0IULStEyv9DwRSV7orzUCWH8raipqvnMDokHdLBPMyKRPpmzuW2cqhikwHIoeK5LPx6K+0QTEmZ4YqWFaKDHE52/J7L3GEUvcStkHZhIOUYKNohm5IlzSct5nANzh3Jfa3Q0MTTFV6iO3K4wI5wyjmXpiW8XHe8X3Zix2aFCzl83K8AmMHl8HYZADBDOJdRKMtCDlEeCjlEeagphx8wHNk4)
&]
[s2; &]
[s0; [/ Производный от] Ctrl, [@(0.0.255) CtrlFrame]&]
[s0; &]
[s0; HeaderCtrl используется, главным образом, 
для заглавий таблиц. Его можно настроить 
под определённую колоночную структуру 
(в терминологии кода, индивидуальные 
заголовочные колонки называются 
[/ вкладки]), включая визуальные характеристик
и вкладок (имена титулов вкладок, 
иконки и т.д.) и поведенческие констрейнты 
(предел ширины вкладки, способность 
показывать/скрывать отдельные вкладки).&]
[s0; &]
[s0; Ширины индивидуальной вкладки определены 
тремя базовыми свойствами `- [/ логической 
шириной вкладки], её [/ минимальной 
]и [/ максимальной пиксельной шириной]. 
Минимальная и максимальная ширина 
вкладки `- это конечные пиксельные 
значения, определяющие констрейнты 
для физических (конечных) ширин колонок. 
С другой стороны, логические ширины 
вкладок задаются в произвольных единицах, 
которые умножаются на определённый 
фактор масштабирования всякий раз, 
когда контрол`-заголовочник выкладывается, 
подстраиваясь под размер видимой 
области. Следовательно, их абсолютные 
величины не имеют значения, а только 
их пропорции.&]
[s0; &]
[s0; Контрол`-заглавие_может работать 
в четырёх разных визуальных режимах. 
Каждый режим эффективно определяет 
то, как относительные логические 
ширины вкладок встраиваются в текущий 
размер видимой области:&]
[s0; &]
[s0;i150;O0; [* Пропорциональный]: ширины вкладок 
пропорционально регулируются, соблюдая 
предустановленные ограничения (констрейнты
) ширин, заполняя текущую ширину видимой 
области;&]
[s0;i150;O0; [* УменьшитьПоследний]: при каждой 
установке ширины вкладки, когда общая 
ширина вкладок превосходит размер 
видимой области, ширины следующих 
вкладок (вкладки справа) уменьшаются 
в порядке справа налево (начиная с 
самой правой вкладки), пока не попадут 
в размер видимой области;&]
[s0;i150;O0; [* УменьшитьСледующий]: при каждой 
установке ширины вкладки, когда общая 
ширина вкладок превосходит размер 
видимой области, ширины следующих 
вкладок (вкладки справа) уменьшаются 
в порядке слева направо (начиная с 
вкладки, находящейся сразу за регулируемой),
 пока не попадут в размер видимой 
области;&]
[s0;i150;O0; [* Абсолютный]: ширины вкладок не 
регулируются автоматически, логическая 
ширина заголовочника может быть меньше 
или больше действительного размера 
видимой области. При каждом превышении 
общей ширины вкладок размера видимой 
области, это заглавие может проматываться 
влево или вправо, панируя свою видимую 
порцию в пределах области видимости 
родителя.&]
[s0; &]
[s0; С точки зрения программиста, HeaderCtrl 
полностью контролирует распределение 
вкладок и необходимый для их регулирования 
пользовательский интерфейс. Контрол`-хост 
может использовать контрол`-заглавие 
(как правило во время операций [/ Layout] 
или [/ Paint]), чтобы получить горизонтальную 
пиксельную позицию отдельных разрывов 
вкладок и использовать их для размещения 
и отрисовки данных колонки.&]
[s0; &]
[s0; Если используется модификатор Moving, 
HeaderCtrl позволяет переупорядочивать 
вкладки, используя операцию тяга 
`& броса. Клиентский код может идентифицирова
ть этот порядок, используя метод GetTabIndex, 
который возвращает `"оригинальный`" 
индекс для данной вкладки.&]
[s0; &]
[s0; HeaderCtrl реализует [/ интерфейс фрейма]; 
если он `"приторочен`" к родительскому 
контролу методом [/ AddFrame], он автоматически 
самопозиционируется поверх прямоугольника 
этого контрола (над его видимой областью).&]
[s0; &]
[s0; В дополнение к стандартному функционалу 
титула вкладки, прямоугольные области, 
соответствующие отдельным вкладкам, 
могут действовать как псевдо`-кнопки, 
вызывая некий функционал при клике. 
У каждой вкладки`-заглавия есть обрвыз 
[/ WhenAction]; если установлен не в нулевое 
значение, контрол`-заглавие начинает 
проверять клики мыши и выполнять 
этот обрвыз, когда нажимается соответствующ
ая вкладка. При использовании для 
вызова всплывающих окон, методом 
[/ GetTabRect] можно определять действительное 
положение определённой вкладки заглавия 
и размещать ниспадающий контрол в 
соответствии с положением прямоугольника 
вкладки.&]
[s0; &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetTabRect`(int`):%- Rect_[@0 GetTabRect]([@(0.0.255) int]_[@3 i
])&]
[s2; Возвращает ограничивающий бокс определённо
й вкладки (в координатах, относительных 
к видимости HeaderCtrl). Может использоваться 
контролами, использующими заглавие 
(наподобии ArrayCtrl) для определения 
положений разрыва колонок или хостовыми 
приложениями для позиционирования 
выпадающих контролов (активируемых 
при клике на вкладке) относительно 
бокса вкладки внутри заглавия.&]
[s4; [*C@3 i]-|Индекс вкладки (с нулевым основанием).&]
[s4; [*/ Возвратное значение]-|прямоугольный 
ограничивающий бокс вкладки внутри 
HeaderCtrl.&]
[s0;* &]
[s0; [* Подсказка:] для размещения выпадающих 
контролов (напр.,  выпадающих меню) 
относительно прямоугольника вкладки, 
нужно трансформировать возвращённый 
прямоугольник в экранные координаты. 
Это можно выполнить, например, используя 
следующий сниппет кода:&]
[s0; &]
[s0; [C -|Rect tab2`_scr`_rect `= tab.GetTabRect(2) `+ tab.GetScreenView().TopLeft();]&]
[s0;3 &]
[s5;:Upp`:`:HeaderCtrl`:`:Tab`(int`)const: [@(0.0.255) const]_[^`:`:Column^ Column]`&_[@0 T
ab]([@(0.0.255) int]_[@3 i][@0 )_const]&]
[s2; Возвращает описательную структуру 
[* HeaderCtrl`::Column] данной вкладки заглавия 
. Эту константную версию можно использовать 
для получения свойств индивидуальной 
вкладки. Более подробное описание 
структуры [* Column ]можно найти ниже.&]
[s4; [*C@3 i]-|Индекс вкладки внутри заглавия 
(на основании нуль).&]
[s4; [*/ Возвратное значение]-|(константная) 
ссылка на структуру [* Column], описывающую 
данную вкладку.&]
[s0;3 &]
[s5;:Upp`:`:HeaderCtrl`:`:Tab`(int`): Column[%- `&]_[@0 Tab]([@(0.0.255) int]_[@3 i][@0 )]&]
[s2; Возвращает (неконстантную) ссылку 
на описательную структуру [* HeaderCtrl`::Column] 
данной вкладки заглавия . Её можно 
использовать для установки и получения 
свойств индивидуальной вкладки (более 
подробное описание структуры [* Column 
]можно найти ниже).&]
[s4; [*C@3 i]-|Индекс вкладки (с нулевым основанием).&]
[s4; [*/ Возвратное значение]-|неконстантная 
ссылка на структуру [* Column], описывающую 
данную вкладку.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Add`(const char`*`,double`):%- Column`&_[@0 Add]([@(0.0.255) c
onst]_[@(0.0.255) char]_`*[@3 text], [@(0.0.255) double]_[@3 ratio]_`=_[@3 0])&]
[s2; Добавляет новую вкладку после (справа 
от) всех существующих вкладок`-заглавий 
. Эта функция возвращает (неконстантную) 
ссылку на структуру [* HeaderCtrl`::Column], которую 
затем можно использовать для настройки 
(установки) дополнительных свойств 
вкладки.&]
[s4; [*C@3 text]-|Имя вкладки (титул).&]
[s4; [*C@3 ratio]-|Логическая ширина вкладки.&]
[s4; [*/ Возвратное значение]-|неконстантная 
ссылка на структуру [* Column], описывающую 
вновь добавленную вкладку.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Add`(`):%- Column`&_[@0 Add]()&]
[s2; Добавляет новую вкладку после (справа 
от)  всех существующих вкладок`-заглавий 
. Это идентично версии выше, с аргументом 
[%-@3 text ]установленным как пустая строка 
и [%-@3 ratio ]равным 0.&]
[s4; [*/ Возвратное значение]-|неконстантная 
ссылка на структуру [* Column], описывающую 
вновь добавленную вкладку.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:operator`[`]`(int`)const:%- [@(0.0.255) const]_[^`:`:HeaderCtrl`:`:Column^ C
olumn]`&_[@0 operator`[`]]([@(0.0.255) int]_[@3 i])_[@(0.0.255) const]&]
[s2; Возвращает (константную) ссылку на 
заданную вкладку`-заглавие. Идентично 
версии [/ const] метода [* Tab].&]
[s4; [*C@3 i]-|Индекс вкладки (на основании 
ноль).&]
[s4; [*/ Возвратное значение]-|константная 
ссылка на заданную вкладку`-заглавие.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetCount`(`)const:%- [@(0.0.255) int]_[@0 GetCount]()_[@(0.0.255) c
onst]&]
[s2; Возвращает текущее число вкладок`-заглавий.
 Каждый [* Add] увеличивает это значение 
на единицу, а [* Reset] устанавливает его 
в 0 (начальное значение).&]
[s4; [*/ Возвратное значение]-|Число вкладок.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Reset`(`):%- [@(0.0.255) void]_[@0 Reset]()&]
[s2; Сбрасывает вкладку`-заглавие в его 
начальное состояние (удаляет все 
вкладки).&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:ShowTab`(int`,bool`):%- [@(0.0.255) void]_[@0 ShowTab]([@(0.0.255) i
nt]_[@3 i], [@(0.0.255) bool]_[@3 show]_`=_true)&]
[s2; Показывает или скрывает определённую 
вкладку`-заглавие.&]
[s4; [*C@3 i]-|индекс вкладки (с основанием 
ноль)&]
[s4; [*C@3 show]-|флаг, указывающий, показывать 
ли вкладку ([* true]) или же скрывать её 
([* false]).&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:HideTab`(int`):%- [@(0.0.255) void]_[@0 HideTab]([@(0.0.255) int
]_[@3 i])&]
[s2; Скрывает определённую вкладку`-заглавие. 
Идентично [* ShowTab(i, false)].&]
[s4; [*C@3 i]-|индекс вкладки (с основанием 
ноль)&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:IsTabVisible`(int`):%- [@(0.0.255) bool]_[@0 IsTabVisible]([@(0.0.255) i
nt]_[@3 i])&]
[s2; Проверяет видимость определённой 
вкладки.&]
[s4; [*C@3 i]-|индекс вкладки (с основанием 
ноль).&]
[s4; [*/ Возвратное значение]-|[* false] `= скрыта, 
[* true] `= видна.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:SetTabRatio`(int`,double`):%- [@(0.0.255) void]_[@0 SetTabRati
o]([@(0.0.255) int]_[@3 i], [@(0.0.255) double]_[@3 ratio])&]
[s2; Устанавливает логическую ширину 
(пропорцию) указанной вкладки.&]
[s4; [*C@3 i]-|индекс вкладки&]
[s4; [*C@3 ratio]-|логическая ширина вкладки.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetTabRatio`(int`)const:%- [@(0.0.255) double]_[@0 GetTabRatio
]([@(0.0.255) int]_[@3 i])_[@(0.0.255) const]&]
[s2; Выводит текущую логическую ширину 
определённой вкладки. Логическую 
ширину вкладки можно установить методом 
[* SetTabRatio] (или использую метод [* SetRatio] 
для индивидуального объекта [* HeaderCtrl`::Column]), 
либо перетягиванием разрывов вкладки 
мышью.&]
[s4; [*C@3 i]-|индекс вкладки (с основанием 
ноль)&]
[s4; [*/ Возвратное значение]-|текущая логическая 
ширина вкладки&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:SetTabWidth`(int`,int`):%- [@(0.0.255) void]_[@0 SetTabWidth](
[@(0.0.255) int]_[@3 i], [@(0.0.255) int]_[@3 cx])&]
[s2; Устанавливает указанную вкладку`-заглавие 
в физический (пиксельный) размер. 
Соответственно это изменяет и логическую 
(относительную) ширину вкладки.&]
[s4; [*C@3 i]-|индекс вкладки (с основанием 
ноль)&]
[s4; [*C@3 cx]-|пиксельный размер вкладки&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetTabWidth`(int`):%- [@(0.0.255) int]_[@0 GetTabWidth]([@(0.0.255) i
nt]_[@3 i])&]
[s2; Возвращает физическую (пиксельную) 
ширину указанной вкладки`-заглавия. 
Помните, что (если только HeaderCtrl не 
в режиме [* Scroll]) физическая ширина вкладки 
может меняться вместе с размером 
видимой области родителя. Алгоритмы 
для долгосрочного манипулирования 
размерами вкладок (типично, путём 
сериализации) всегда должны опираться 
на логические ширины вкладок.&]
[s4; [*C@3 i]-|индекс вкладки (с основанием 
ноль)&]
[s4; [*/ Возвратное значение]-|физическая 
(пиксельная) ширина вкладки. Заметьте, 
что эта функция не [/ const], так как контрол`-загл
авие использует `"ленивый`" алгоритм 
при своей выкладке, и при вызове [* GetTabWidth] 
может понадобиться перевыкладка 
вкладок.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:SwapTabs`(int`,int`):%- [@(0.0.255) void]_[@0 SwapTabs]([@(0.0.255) i
nt]_[@3 first], [@(0.0.255) int]_[@3 second])&]
[s2; Меняет местами вкладки [%-*@3 first] и [%-*@3 second].&]
[s0; &]
[s5;K:Upp`:`:HeaderCtrl`:`:MoveTab`(int`,int`):%- [@(0.0.255) void]_[@0 MoveTab]([@(0.0.255) i
nt]_[@3 from], [@(0.0.255) int]_[@3 to])&]
[s2; Перемещает вкладку в другую позицию.&]
[s0; &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetTabIndex`(int`):%- [@(0.0.255) int]_[@0 GetTabIndex]([@(0.0.255) i
nt]_[@3 i])&]
[s2; Возвращает `"оригинальный`" индекс 
вкладки.&]
[s0; &]
[s5;K:Upp`:`:HeaderCtrl`:`:FindIndexTab`(int`):%- [@(0.0.255) int]_[@0 FindIndexTab]([@(0.0.255) i
nt]_[@3 ndx])&]
[s2; Находит текущую позицию вкладки 
с оригинальным индексом [%-*@3 ndx].&]
[s0; &]
[s5;K:Upp`:`:HeaderCtrl`:`:StartSplitDrag`(int`):%- [@(0.0.255) void]_[@0 StartSplitDrag](
[@(0.0.255) int]_[@3 s])&]
[s2; Начинает тяг `& брос вкладки`-заглавия 
для указанного разрыва вкладки.&]
[s4; [*C@3 s]-|индекс разрыва (ноль `= левая сторона 
вкладки 0).&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetSplit`(int`):%- [@(0.0.255) int]_[@0 GetSplit]([@(0.0.255) in
t]_[@3 x])&]
[s2; Определяет положение разрыва вкладки`-загла
вия, соответствующее заданной координате 
[/ x] (относительно контрола`-заглавия). 
Может использоваться родительскими 
контролами для проверки, находится 
ли курсор мыши поверх разрыва вкладки 
(напр.,. [* ArrayCtrl] использует эту функцию 
для проверки того, показывать ли ему 
горизонтальный курсор перемера).&]
[s4; [*C@3 x]-|горизонтальная пиксельная координата 
(относительно органичивающего бокса 
контрола`-заглавия).&]
[s4; [*/ Возвратное значение]-|индекс разрыва 
вкладки (в диапазоне `[0..GetCount()`]) или 
`-1, когда поблизости от заданной точки 
нет разрыва вкладки.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetScroll`(`)const:%- [@(0.0.255) int]_[@0 GetScroll]()_[@(0.0.255) c
onst]&]
[s2; Только в режиме [* Absolute]: возвращает 
пиксельное смещение, определяющее 
текущее начало (потенциально промотанного) 
заглавия. Для безпромоточных визуальных 
режимов, эта функция всегда возвращает 
0 (в этих режимах левая сторона первой 
вкладки всегда совпадает с левой 
стороной родительской области видимости).&]
[s4; [*/ Возвратное значение]-|Число пикселей, 
на которые в данный момент промотан 
контрол`-заглавие в горизонтальном 
направлении. Физическая координата 
[/ x] края вкладки (относительно родительской 
видимости) может быть вычислена вычитанием 
этого значения от его логической 
координаты (относительно крайней 
левой кромки заглавия).&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:IsScroll`(`)const:%- [@(0.0.255) bool]_[@0 IsScroll]()_[@(0.0.255) c
onst]&]
[s2; Проверяет, находится ли в данное 
время контрол`-заглавие в режиме промотки 
(т.е., находится ли он в визуальном 
режиме [* Absolute] и его общая ширина вкладок 
превышает текущий размер видимой 
области). Когда [* IsScroll] возвращает [* true], 
метод [* GetScroll] можно использовать для 
получения текущей позиции горизонтальной 
полосы промотки.&]
[s4; [*/ Возвратное значение]-|[* true] `= проматываемое 
заглавие, [* false ]`= непроматываемое.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetHeight`(`)const:%- [@(0.0.255) int]_[@0 GetHeight]()_[@(0.0.255) c
onst]&]
[s2; Определяет пиксельную высоту контрола`-загл
авия. Она равна максимуму всех индивидуальны
х высот вкладок (зависит от шрифтов 
титула вкладки и размеров иконок).&]
[s4; [*/ Возвратное значение]-|пиксельная 
высота HeaderCtrl.&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Invisible`(bool`):%- HeaderCtrl`&_[@0 Invisible]([@(0.0.255) b
ool]_[@3 inv])&]
[s2; При вызове с аргументом [* true], делает 
заголовок в режиме фрейма нулевой 
высоты (процедуры размещения вкладок 
продолжают работать, но само заглавие 
остаётся скрытым).&]
[s4; [*C@3 inv]-|[* true] `= скрыть заглавие , [* false] `= 
показать его.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Track`(bool`):%- HeaderCtrl`&_[@0 Track]([@(0.0.255) bool]_[@3 `_
track]_`=_true)&]
[s2; Устанавливает, следует ли `"анимировать`" 
HeaderCtrl и содержимое области видимости 
его родителя при репозиционировании 
tab breaks посредством drag `& drop мышью. Когда 
[* `_track] установлен в [* true], перерисовка 
заглавия и его родителя запрашивается 
при каждом движении мыши во время 
тяга`-броса. Когда в [* false], то перерисовка 
происходит только после выполнения 
тяга`-броса. Умно, если устанавливать 
это значение в зависимости от сложности 
данных, показываемых `'под`' заглавием 
(обычно в ArrayCtrl`'е), и от ожидаемого 
целевого железа, так как режим track 
особо требователен к вычислительному 
времени, потраченному на необходимые 
множественные перерисовки.&]
[s4; [*C@3 `_track]-|[* true] `= регенерировать заглавие 
и его родителя динамически при тяге`-бросе, 
[* false] `= только после его окончания.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:NoTrack`(`):%- HeaderCtrl`&_[@0 NoTrack]()&]
[s2; Выключает режим track. Идентично [* Track(false)].&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Proportional`(`):%- HeaderCtrl`&_[@0 Proportional]()&]
[s2; Переключает HeaderCtrl в режим [/ proportional]. 
В пропорциональном режиме ширины 
индивидуальных логических табов 
всегда перевычисляются в физические 
(пиксельные) ширины, масштабированием 
их с применением общего фактора умножения 
с том, чтобы уместить всё заглавие 
в ширину видимой области.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:ReduceNext`(`):%- HeaderCtrl`&_[@0 ReduceNext]()&]
[s2; Переключает HeaderCtrl в режим [/ reduce next]. 
При каждой установке владки в этот 
режим и превышении её общей шириной 
размера видимой области, ширины следующих 
вкладок (расположенных правее) уменьшаются 
в порядке слева`-направо (начиная 
с вкладки, расположенной сразу после 
настраиваемой), пока не уместятся 
в размер видимой области.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:ReduceLast`(`):%- HeaderCtrl`&_[@0 ReduceLast]()&]
[s2; Переключает HeaderCtrl в режим [/ reduce last]. 
При каждой установке вкладки в этот 
режим и превышении её общей шириной 
размера видимой области, ширины следующих 
вкладок (расположенных правее) уменьшаются 
в порядке слева`-направо (начиная 
с вкладки, расположенной правее всех), 
пока не уместятся в размер видимой 
области.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Absolute`(`):%- HeaderCtrl`&_[@0 Absolute]()&]
[s2; Переключает HeaderCtrl в режим [/ absolute] (scroll). 
В этом режиме шиины вкладок никогда 
не меняются автоматически, логическая 
ширина заглавия может  быть меньше 
или больше актуального размера видимой 
области. При всяком превышении общей 
шириной вкладок области видимости, 
заглавие может проматываться вправо 
или влево, панируя свою видимую порцию 
в область видимости родительского 
контрола.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Moving`(bool`):%- HeaderCtrl`&_[@0 Moving]([@(0.0.255) bool]_[@3 b
]_`=_true)&]
[s2; Активирует режим, в котором вкладки 
могут реорганизовываться путём перетягиван
ия. Дефолтно неактивен.&]
[s0;3 &]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:GetStdHeight`(`):%- static static_[@(0.0.255) int]_[@0 GetStdH
eight]()&]
[s2; Возвращает стандартную высоту контрола`-заг
лавия (когда нет иконок и во всех вкладках 
используется стандартный шрифт).&]
[s4; [*/ Возвратное значение]-|&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:WhenLayout:%- Callback_[@0 WhenLayout]&]
[s2; Этот обрвызов выполняется всякий 
раз, когда контрол`-заглавие `"выкладывается`"
 (когда меняются позиции табов и/или 
их ширины).&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:WhenScroll:%- Callback_[@0 WhenScroll]&]
[s2; Этот обрвызов выполняется  всякий 
раз, когда контрол`-заглавие `"проматывается`"
 (только в режиме [/ absolute]).&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:WhenScrollVisibility:%- Callback_[@0 WhenScrollVisibility]&]
[s2; Этот обрвызов выполняется  всякий 
раз, когда появляется или исчезает 
полоса промотки (когда меняется возвратное 
значение метода [* IsScroll]).&]
[s0; &]
[s0; &]
[s0;:Upp`:`:HeaderCtrl`:`:Column`:`:class: [*+117 HeaderCtrl`::Column 
(гнездовой класс)]&]
[s2; &]
[s0;%- [%RU-RU/ Производный от][%RU-RU  ]LabelBase&]
[s0; &]
[s0; Структура [* HeaderCtrl`::Column] представляет 
собой индивидуальную вкладку заглавия. 
Методы HeaderCtrl для вставки вкладок 
и редактирования, как правило, возвращают 
ссылку на этот класс [/ Column], который 
может использоваться впоследствии 
для программирования различных свойств 
вкладки.&]
[s0; &]
[s0; Устанавливающие методы возвращают 
ссылку на [* `*this] ;это позволяет сразу 
несколько свойств вкладки установить 
одновременно, используя единую инструкцию 
на C`+`+ с повторением оператора`-точки, 
напр.:&]
[s0; &]
[s0; [C -|headerctrl.Add().Min(10).Max(20).Margin(3);]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Column`:`:Min`(int`):%- Column`&_[@0 Min]([@(0.0.255) int]_[@3 `_
min])&]
[s2; Устанавливает минимальный пиксельный 
размер вкладки. Дефолтное значение 
равно 0 (в определённый момент вкладка 
может быть сокращена произвольным 
образом и даже может исчезнуть).&]
[s4; [%-*C@3 `_min]-|Минимальная ширина вкладки 
в пикселях.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Column`:`:Max`(int`):%- Column`&_[@0 Max]([@(0.0.255) int]_[@3 `_
max])&]
[s2; Устанавливает максимальную ширину 
вкладки в пикселях. Дефолтное значение 
равно [/ INT`_MAX] (неограничено).&]
[s4; [%-*C@3 `_max]-|Максимальная пиксельная ширина 
вкладки.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Column`:`:MinMax`(int`,int`):%- Column`&_[@0 MinMax]([@(0.0.255) i
nt]_[@3 m], [@(0.0.255) int]_[@3 n])&]
[s2; Устанавливает одновременно и минимальную 
и максимальную ширину вкладки в пикселях. 
Эффект такой же, как у [* .Min(m).Max(n)].&]
[s4; [%-*C@3 m]-|Минимальная пиксельная ширина 
вкладки.&]
[s4; [%-*C@3 n]-|Максимальная пиксельная ширина 
вкладки.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Column`:`:Fixed`(int`):%- Column`&_[@0 Fixed]([@(0.0.255) int]_
[@3 f])&]
[s2; Устанавливает и макс., и мин. пиксельную 
ширину вкладки в одинаковые значения, 
эффективно делая ширину вкладки постояннойt
. Равно [* .MinMax(f, f)].&]
[s4; [%-*C@3 f]-|Фиксированная ширина вкладки 
в пикселях.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Column`:`:SetRatio`(double`):%- Column`&_[@0 SetRatio]([@(0.0.255) d
ouble]_[@3 ratio])&]
[s2; Устанавливает логическую (относительную) 
ширину вкладки. ЛШВ (вместе с логическими 
ширинами других вкладок и минимальным/макси
мальным ограничением (констрейнтом)) 
используется для вычисления окончательного
 пиксельного размера каждой вкладки, 
соответствуя текущему визуальному 
режиму заглавия.&]
[s4; [%-*C@3 ratio]-|относительная ширина вкладки 
(генерное значение с плавающей запятой)&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Column`:`:SetMargin`(int`):%- Column`&_[@0 SetMargin]([@(0.0.255) i
nt]_[@3 m])&]
[s2; Устанавливает горизонтальный размер 
кромки вкладки, число пикселей для 
того, чтобы `"сдуть`" горизонтально 
прямоугольник вкладки и получить 
окончательный прямоугольник `"колонки 
данных`". В [/ ArrayCtrl`'е], кромочные области 
вкладок используются для отрисовки 
линий сетки и инвертированного прямоугольни
ка выделения, находящегося вне ячеек 
таблицы.&]
[s4; [%-*C@3 m]-|Горизонтальный размер кромки 
вкладки в пикелях.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Column`:`:GetMargin`(`)const:%- [@(0.0.255) int]_[@0 GetMargin
]()_[@(0.0.255) const]&]
[s2; Возвращает текущий размер кромки 
вкладки в пикселях.&]
[s4; [*/ Возвратное значение]-|[* `*this]&]
[s0;3 &]
[s5;K:Upp`:`:HeaderCtrl`:`:Column`:`:WhenAction:%- Callback_[@0 WhenAction]&]
[s2; Обрвызов действия со вкладкой. Если 
установлен в ненулевое значение, 
контрол`-заглавие начинает проверку 
кликов мышью в пределах этой вкладки 
и вызывает этот обрвыз, при всяком 
клике в соответствующей вкладке.&]
[s0; &]
[s5;K:`:`:HeaderCtrl`:`:Column`:`:WhenBar:%- Callback1<Bar`&>_[@0 WhenBar]&]
[s2; Предоставляет опционное контекстное 
меню для вкладки заглавия.&]
[s0; ]]