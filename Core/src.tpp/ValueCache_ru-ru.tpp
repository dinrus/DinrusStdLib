topic "Глобальный Кэш Значений";
[i448;a25;kKO9;2 $$1,0#37138531426314131252341829483380:class]
[l288;2 $$2,2#27521748481378242620020725143825:desc]
[0 $$3,0#96390100711032703541132217272105:end]
[H6;0 $$4,0#05600065144404261032431302351956:begin]
[i448;a25;kKO9;2 $$5,0#37138531426314131252341829483370:item]
[l288;a4;*@5;1 $$6,6#70004532496200323422659154056402:requirement]
[l288;i1121;b17;O9;~~~.1408;2 $$7,0#10431211400427159095818037425705:param]
[i448;b42;O9;2 $$8,8#61672508125594000341940100500538:tparam]
[b42;2 $$9,9#13035079074754324216151401829390:normal]
[2 $$0,0#00000000000000000000000000000000:Default]
[{_}%RU-RU 
[ {{10000@(113.42.0) [s0; [*@7;4 Глобальный Кэш Значений]]}}&]
[s0; &]
[s0; Глобальный Кэш Значений `- это централизован
ный механизм для кэширования данных. 
Элементы в кэше имеют тип Value. Глобальный 
Кэш Значений настраивает свой размер, 
основываясь на текущем потреблении 
памяти системой.&]
[s0;* &]
[ {{10000F(128)G(128)@1 [s0; [* Список Функций]]}}&]
[s3; &]
[s5;:Upp`:`:MakeValue`(Upp`:`:ValueMaker`&`): [_^Upp`:`:Value^ Value]_[* MakeValue]([_^Upp`:`:ValueMaker^ V
alueMaker][@(0.0.255) `&]_[*@3 m])&]
[s2; Запрашивает Value. Это Value определяется 
экземпляром класса, производного 
от ValueMaker, который имеет два виртуальных 
метода:&]
[s2; &]
[s2; virtual String [* Key]() const;&]
[s2; virtual int [* Make](T`& object) const;&]
[s2; &]
[s2; [* Key] должен вернуть для Value уникальный 
идентификатор, затребованный у производного
 от ValueMaker класса. Заметьте, что тип 
производного от ValueMaker класса становится 
частью ключа,поэтому не приходится 
добавлять никакой информации о ValueMaker`'е 
в этот ключ. [* Make] далее создаёт соответствующ
ее Value и возвращает приблизительное 
потребление памяти, требуемое для 
хранеия этого Value. [* MakeValue] сначала проверяет, 
соответствует ли Value указанному ValueMaker 
и находится лм Key в кэше, если да, то 
возвращается Value из кэша, иначе вызывается 
ValueMaker`::Make, чтобы получить Value и сохранить 
его в кэше.&]
[s3; &]
[s4;%- &]
[s5;:Upp`:`:IsValueCacheActive`(`):%- [@(0.0.255) bool]_[* IsValueCacheActive]()&]
[s2; Возвращает true, если всё ещё можно 
пользоваться Кэшем Значений. Эта 
особая функция рещает конфликты при 
деструкции в конце работы программы 
(при выходе).&]
[s3;%- &]
[s4;%- &]
[s5;:Upp`:`:AdjustValueCache`(`):%- [@(0.0.255) void]_[* AdjustValueCache]()&]
[s2; Регулирует размер кэша, опираясь 
на доступную системную память. Этот 
прочесс управляется параметрами, 
устанавливаемыми SetupValueCache. Заметьте, 
что CtrlCore (U`+`+ GUI) обычно вызывает эту 
фунцию после обработки каждого события 
ГИП (GUI).&]
[s3;%- &]
[s4;%- &]
[s5;:Upp`:`:ShrinkValueCache`(`):%- [@(0.0.255) void]_[* ShrinkValueCache]()&]
[s2; Поддерживает размер кэша, основываясь 
на лимите, вычисленном при последнем 
вызове AdjustValueCache.&]
[s3;%- &]
[s4;%- &]
[s5;:Upp`:`:SetupValueCache`(int`,int`,double`):%- [@(0.0.255) void]_[* SetupValueCache](
[@(0.0.255) int]_[*@3 limit`_low], [@(0.0.255) int]_[*@3 limit`_high], 
[@(0.0.255) double]_[*@3 ratio])&]
[s2; Устанавливает параметры, управляющие 
размером кэша. [%-*@3 limit`_low] `- нижний предел 
`- кэш никогда не понижается, если 
его потребление ниже этого предела 
(дефолт равен 4 МБ). [%-*@3 limit`_high] `= верхний 
предел `- кэш никогда не перерастает 
за этот предел (дефолт равен 2 ГБ). 
[%-*@3 ratio] определяет, сколько доступной 
физической системной памяти можно 
определить для кэша, дефолт равен 
12.5%.&]
[s3; &]
[s4;%- &]
[s5;:Upp`:`:ValueCacheRemove`(P`):%- [@(0.0.255) template]_<[@(0.0.255) class]_[*@4 P]>_[@(0.0.255) i
nt]_[* ValueCacheRemove]([*@4 P]_[*@3 what])&]
[s2; Удаляет все Value`'и из кэша, удовлетворяющие 
предикат [%-*@3 what].&]
[s3; &]
[s4;%- &]
[s5;:Upp`:`:ValueCacheRemoveOne`(P`):%- [@(0.0.255) template]_<[@(0.0.255) class]_[*@4 P]>_
[@(0.0.255) int]_[* ValueCacheRemoveOne]([*@4 P]_[*@3 what])&]
[s2; Удаляет одно Value из кэша, удовлетворяющее 
предикат [%-*@3 what] (просто удаляет первый 
найденный).&]
[s3; &]
[s4;%- &]
[s5;:Upp`:`:ValueCacheAdjustSize`(P`):%- [@(0.0.255) template]_<[@(0.0.255) class]_[*@4 P]>
_[@(0.0.255) void]_[* ValueCacheAdjustSize]([*@4 P]_[*@3 getsize])&]
[s2; Регулирует информацию о размере. 
[%-*@3 getsize] должен вернуть размер памяти, 
необходимый для хранения Value, переданного 
как параметр, или может вернуть отрицательно
е число, сигнализирующее о том, что 
размер не изменился. Эта довольно 
специфичная функция нужна для поддержки 
PaintOnly Image`'ей.&]
[s0; ]]