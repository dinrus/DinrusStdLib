topic "Класс One";
[i448;a25;kKO9;2 $$1,0#37138531426314131252341829483380:class]
[l288;2 $$2,0#27521748481378242620020725143825:desc]
[0 $$3,0#96390100711032703541132217272105:end]
[H6;0 $$4,0#05600065144404261032431302351956:begin]
[i448;a25;kKO9;2 $$5,0#37138531426314131252341829483370:item]
[l288;a4;*@5;1 $$6,6#70004532496200323422659154056402:requirement]
[l288;i1121;b17;O9;~~~.1408;2 $$7,0#10431211400427159095818037425705:param]
[i448;b42;O9;2 $$8,8#61672508125594000341940100500538:tparam]
[b42;2 $$9,9#13035079074754324216151401829390:normal]
[2 $$0,0#00000000000000000000000000000000:Default]
[{_} 
[ {{10000@(113.42.0) [s0;%RU-RU [*@7;4 Класс One]]}}&]
[s3; &]
[s1;:noref: [@(0.0.255)3 template][3 _<][@(0.0.255)3 class][3 _][*@4;3 T][@(0.0.255)3 >]&]
[s1;:One`:`:class: [@(0.0.255) class]_[* One]_:_[@(0.0.255) private]_[*@3 MoveableAndDeepCopyO
ption][@(0.0.255) <]_[* One][@(0.0.255) <][*@4 T][@(0.0.255) >]_>_&]
[s8;%RU-RU [%-*C@4 T]-|Тип или класс`-основание 
элемента, сохраняемого в One.&]
[s0;%RU-RU &]
[s9;%RU-RU One `- это контейнер, способный содержать 
ноль или один элемент типа, заданного 
как шаблонный аргумент или производного 
от него.&]
[s9;%RU-RU Этот контейнер похож на [^http`:`/`/en`.cppreference`.com`/w`/cpp`/memory`/unique`_ptr^ s
td`::unique`_ptr], но в отличие от него, он 
больше понимается как контейнер, 
а не как смарт`-указатель. Например, 
он распространяет константность 
One на содержимый элемент.&]
[s9;%RU-RU One является типом [*/^topic`:`/`/Core`/srcdoc`/Moveable`_ru`-ru^ m
oveable][*/  ]с семантикой трансфера [*/^topic`:`/`/Core`/srcdoc`/pick`_`_ru`-ru^ p
ick and optional clone] .&]
[s3; &]
[s0; &]
[ {{10000F(128)G(128)@1 [s0;%RU-RU [* Список Конструкторов]]}}&]
[s0;0 &]
[s5;:One`:`:One`(`): [* One]()&]
[s2;%RU-RU Дефолтный конструктор. Конструирует 
пустой One.&]
[s3; &]
[s4; &]
[s5;:One`:`:One`(T`*`): [* One]([*@4 T]_`*[*@3 newt])&]
[s2;%RU-RU Конструирует One с контентом [%-*@3 newt]. 
Контент определяется указателем 
на объект, созданный оператором new. 
One принимает этот объект во владение.&]
[s3;%RU-RU &]
[s4; &]
[s5;:Upp`:`:One`:`:One`(Upp`:`:One`<TT`>`&`&`): [@(0.0.255) template]_<[@(0.0.255) class]_
[*@4 TT]>_[* One]([* One]<[*@4 TT]>`&`&_[*@3 p])&]
[s2;%RU-RU Пик`-конструктор. [%-*@4 TT] должен 
быть такой же, как [%-*@4 T], либо производным 
от [%-*@4 T].&]
[s3;%RU-RU &]
[s4; &]
[s5;:One`:`:One`(const One`<T`>`&`,int`): [* One]([@(0.0.255) const]_[* One][@(0.0.255) <][*@4 T
][@(0.0.255) >`&]_[*@3 p], [@(0.0.255) int])&]
[s6;%RU-RU Опционный конструктор глубокой 
копии.&]
[s2;%RU-RU У T должен быть конструктор глубокой 
копии или опционный КГК.&]
[s3;%RU-RU &]
[s4; &]
[s5;:One`:`:`~One`(`): [@(0.0.255) `~][* One]()&]
[s2;%RU-RU Дефолтный деструктор .&]
[s3; &]
[s1;%RU-RU &]
[ {{10000F(128)G(128)@1 [s0;%RU-RU [* Список Методов]]}}&]
[s0;0 &]
[s5;:One`:`:Clear`(`): [@(0.0.255) void]_[* Clear]()&]
[s2; Удаляет элемент, хранимый в [* One].&]
[s3;%RU-RU &]
[s4; &]
[s5;:One`:`:IsPicked`(`)const: [@(0.0.255) bool]_[* IsPicked]()_[@(0.0.255) const]&]
[s2;%RU-RU Возвращает [* true], если [* One] был `"пикнут`".&]
[s3;%RU-RU &]
[s4; &]
[s5;:One`:`:Attach`(T`*`): [@(0.0.255) void]_[* Attach]([*@4 T]_`*[*@3 data])&]
[s2;%RU-RU Присваивает элемент к One. (Заметка:Если 
в One при вызове этой функции есть контент, 
то он разрушается). [%-*C@3 data] должен быть 
указателем на новый контент, созданный 
с помощью оператора new.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:One`:`:Detach`(`): [*@4 T]_`*[* Detach]()&]
[s2;%RU-RU Удаляет контент, отвергая владение 
им. Клиент ответственен за удаление 
контента. Если One пустой, возвратное 
значение равно NULL, иначе это указатель 
на контент, размещённый на куче.&]
[s3; &]
[s4; &]
[s5;:One`:`:operator`=`(T`*`): [@(0.0.255) void]_[* operator`=]([*@4 T]_`*[*@3 data])&]
[s7;%RU-RU То же, что и Attach([%-*@3 data]) (операторная 
версия).&]
[s3; &]
[s4; &]
[s5;:Upp`:`:One`:`:operator`=`(Upp`:`:One`<TT`>`&`&`): [@(0.0.255) template]_<[@(0.0.255) c
lass]_[*@4 TT]>_[@(0.0.255) void]_[* operator`=]([_^Upp`:`:One^ One]<[*@4 TT]>`&`&_[*@3 d])&]
[s2;%RU-RU Пик`-присваивание. [%-*@4 TT] должен 
быть такой же, как [%-*@4 T], или производный 
от [%-*@4 T].&]
[s3; &]
[s4; &]
[s5;:One`:`:operator`-`>`(`)const: [@(0.0.255) const]_[*@4 T]_`*[* operator`->]()_[@(0.0.255) c
onst]&]
[s2;%RU-RU Константный оператор доступа 
к контенту. Нелегален, если контент 
отсутствует. Возвращает константный 
указатель на контент.&]
[s3; &]
[s4; &]
[s5;:One`:`:operator`-`>`(`): [*@4 T]_`*[* operator`->]()&]
[s2;%RU-RU Оператор доступа к контенту. Нелегален, 
если контент отсутствует. Возвращает 
указатель на контент.&]
[s3; &]
[s4; &]
[s5;:One`:`:operator`~`(`)const: [@(0.0.255) const]_[*@4 T]_`*[* operator`~]()_[@(0.0.255) co
nst]&]
[s5;:Upp`:`:One`:`:Get`(`)const: [@(0.0.255) const]_[*@4 T]_`*[* Get]()_[@(0.0.255) const]&]
[s2;%RU-RU Константный доступ к указателю 
на контент. Возвращает константный 
указатель на контент или NULL, если 
контент отсутствует.&]
[s3; &]
[s4; &]
[s5;:One`:`:operator`~`(`): [*@4 T]_`*[* operator`~]()&]
[s5;:Upp`:`:One`:`:Get`(`): [*@4 T]_`*[* Get]()&]
[s2;%RU-RU Доступ к указателю на контент. 
Возвращает указатель на контент или 
NULL, если контент отсутствует.&]
[s3; &]
[s4; &]
[s5;:One`:`:operator`*`(`)const: [@(0.0.255) const]_[*@4 T][@(0.0.255) `&]_[* operator`*]()_[@(0.0.255) c
onst]&]
[s2;%RU-RU Константный доступ к ссылке на 
контент. Нелегален, если контент отсутствует
. Возвращает константную ссылку на 
на контент.&]
[s3; &]
[s4; &]
[s5;:One`:`:operator`*`(`): [*@4 T][@(0.0.255) `&]_[* operator`*]()&]
[s2;%RU-RU Доступ к ссылке на контент. Нелегален, 
если контент отсутствует. Возвращает 
ссылку на на контент.&]
[s3; &]
[s4; &]
[s5;:Upp`:`:One`:`:Create`(Args`&`&`.`.`.args`): [@(0.0.255) template]_<[@(0.0.255) class
]_[*@4 TT], [@(0.0.255) class...]_[*@4 Args]>_[*@4 TT][@(0.0.255) `&]_[* Create]([*@4 Args][@(0.0.255) `&
`&...]_args)&]
[s2;%RU-RU Создаёт контент [%-*@4 TT] в One. Если 
в One при вызове этой функции есть контент, 
то он разрушается. Конструктору [%-*@4 TT 
]могут задаваться дополнительные 
аргументы.&]
[s3;%RU-RU &]
[s4;%RU-RU &]
[s5;:Upp`:`:One`:`:Create`(`): [*@4 T][@(0.0.255) `&]_[* Create]()&]
[s2;%RU-RU Создаёт контент [%-*@4 T] в One (конструируемый
 дефолтно).&]
[s3; &]
[s4; &]
[s5;:One`:`:Is`(`)const: [@(0.0.255) template]_<[@(0.0.255) class]_[*@4 TT]>_[@(0.0.255) bool
]_[* Is]()_[@(0.0.255) const]&]
[s2;%RU-RU Возвращает true, если One содержит 
объект типа [%-*@4 TT] или производного 
от [%-*@4 TT]. [%-*@4 T] должен быть полиморфным.&]
[s3; &]
[s4; &]
[s5;:One`:`:IsEmpty`(`)const: [@(0.0.255) bool]_[* IsEmpty]()_[@(0.0.255) const]&]
[s2;%RU-RU Возвращает [* true], если контента 
нет.&]
[s3; &]
[s4; &]
[s5;:One`:`:operator bool`(`)const: [* operator_bool]()_[@(0.0.255) const]&]
[s2;%RU-RU Возвращает [* true], если есть контент.&]
[s0; &]
[s0; &]
[ {{10000@(113.42.0) [s0;%RU-RU [*@7;4 Функция MakeOne]]}}&]
[s0; &]
[s5;:Upp`:`:MakeOne`(Args`.`.`.args`): [@(0.0.255) template]_<[@(0.0.255) class]_[*@4 T], 
[@(0.0.255) class...]_[*@4 Args]>_[_^Upp`:`:One^ One]<[*@4 T]>_[* MakeOne]([*@4 Args][@(0.0.255) .
..]_args)&]
[s2;%RU-RU Эта простая утилитная функция 
создаёт экземпляр One<T>.&]
[s0; ]]