topic "Форматирование и сканирование дат";
[i448;a25;kKO9;2 $$1,0#37138531426314131252341829483380:class]
[l288;2 $$2,0#27521748481378242620020725143825:desc]
[0 $$3,0#96390100711032703541132217272105:end]
[H6;0 $$4,0#05600065144404261032431302351956:begin]
[i448;a25;kKO9;2 $$5,0#37138531426314131252341829483370:item]
[l288;a4;*@5;1 $$6,6#70004532496200323422659154056402:requirement]
[l288;i1121;b17;O9;~~~.1408;2 $$7,0#10431211400427159095818037425705:param]
[i448;b42;O9;2 $$8,8#61672508125594000341940100500538:tparam]
[b42;2 $$9,9#13035079074754324216151401829390:normal]
[2 $$0,0#00000000000000000000000000000000:Default]
[{_}%RU-RU 
[ {{10000@(113.42.0) [s0;%- [*@7;4 Форматирование и сканирование 
дат]]}}&]
[s0;*@3;4%- &]
[ {{10000F(128)G(128)@1 [s0; [* Глобальные функции]]}}&]
[s3;%- &]
[s5;:StrToDate`(Date`&`,const char`*`):%- [@(0.0.255) const]_[@(0.0.255) char]_`*[* StrToDa
te]([_^Date^ Date][@(0.0.255) `&]_[*@3 d], [@(0.0.255) const]_[@(0.0.255) char]_`*[*@3 s])&]
[s2; Сканирует строку на наличие даты. 
Порядок вывода дня, месяца и года 
устанавливается с помощью SetDateScan. 
Вместо месяца принимаются и число, 
и текст: текст должен соответствовать 
краткому, либо полному, названию месяца.&]
[s7; [%-*C@3 d]-|Найденная дата.&]
[s7; [%-*C@3 s]-|Сканируемая строка.&]
[s7; [*/ Возвратное значение]-|NULL, если дат 
не найдено в s, либо указатель на символ, 
находящийся сразу после даты.&]
[s3; &]
[s4;%- &]
[s5;:Format`(Date`):%- [_^String^ String]_[* Format]([_^Date^ Date]_[*@3 date])&]
[s2; Форматирует дату. Дата форматируется 
посредством стандартной функции 
[^topic`:`/`/Core`/src`/Format`_ru`-ru^ Format], где в качестве 
строки форматирования используется 
строка, установленная SetDateFormat, а три 
прилагаемых целочисленных аргумента 
являются годом, месяцем и днём.&]
[s7; [%-*C@3 date]-|Форматируемая дата.&]
[s7; [*/ Возвратное значение]-|Отформатированная 
дата.&]
[s3; &]
[s4;%- &]
[s5;:CharFilterDate`(int`):%- [@(0.0.255) int]_[* CharFilterDate]([@(0.0.255) int]_[*@3 c])&]
[s2; Символьный фильтр для дат. Его поведение 
задаётся функцией SetDateFilter.&]
[s7; [%-*C@3 c]-|Фильтруемый символ.&]
[s7; [*/ Возвратное значение]-|Отфильтрованный 
символ.&]
[s3; &]
[s4;%- &]
[s5;:SetDateFormat`(const char`*`):%- [@(0.0.255) void]_[* SetDateFormat]([@(0.0.255) const
]_[@(0.0.255) char]_`*[*@3 fmt])&]
[s2; Устанавливает строку форматирования 
для дат. При использовании для форматировани
я, с этой строкой передаются 3 целочисленных 
агрумента в функцию [^topic`:`/`/Core`/src`/Format`_ru`-ru^ Format
]. Первый `- год, второй `- месяц, третий 
`- день. Это попоточная (понитевая) 
настройка, где нити наследуют настройку 
от главной нити.&]
[s3; &]
[s4;%- &]
[s5;:SetDateScan`(const char`*`):%- [@(0.0.255) void]_[* SetDateScan]([@(0.0.255) const]_[@(0.0.255) c
har]_`*[*@3 scan])&]
[s2; Устанавливает строку сканирования 
дат: эта строка представляет порядок 
[* d]дня, [* m]месяца и [* y]года[*  ]для функции 
StrToDate. Буквы `'[* d]`', `'[* m]`' и `'[* y]`' используются 
в [%-*@3 scan] для определения порядка. Это 
попоточная (понитевая) настройка, 
где нити наследуют настройку от главной 
нити&]
[s2; Пример:&]
[s2; [*C@3       ][*C `"mdy`"]&]
[s7; Месяц `- первый, день `- второй, год 
`- третий.&]
[s3; &]
[s4;%- &]
[s5;:SetDateFilter`(const char`*`):%- [@(0.0.255) void]_[* SetDateFilter]([@(0.0.255) const
]_[@(0.0.255) char]_`*[*@3 seps])&]
[s2; Задаёт поведение CharFilterDate.Цифры всегда 
допустимы для CharFilterDate. Если в начале 
строки`-разделителя [%-*@3 seps] есть `"a`", 
то допускаются и буквы. IЕсли есть 
`"A`", то буквы допускаются, но преобразовывают
ся в заглавные. После этого необязательного 
символа, идёт список символов. `"`\r`" 
после символа обозначает символ замены 
(`"replace`"): если он используется, то все 
символы до следующего символа `"amend`" 
или `'`\0`' заменяются на него.  Это попоточная 
(понитевая) настройка, где нити наследуют 
настройку от главной нити&]
[s2; Пример:&]
[s2; [*C@3       ][*C `"a.][*C@3 `\r][*C@5 ,][*C@3 `\r][*C /][*C@3 `\r][*C@5 :;][*C `"]&]
[s2; CharFilterDate допускает буквы, но не преобразует 
их в верхний регистр; допускаются 
символы `'[* .]`' и `'/`' , и преобразовываются 
`'[*@5 ,]`' в `'[* .]`' , а `'[*@5 :]`' или `'[*@5 ;]`' в `'[* /]`'.&]
[s3; &]
[s0; ]]