/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p obex_manager_p.h:obex_manager.cpp org.openobex.all.xml org.openobex.Manager
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef OBEX_MANAGER_P_H
#define OBEX_MANAGER_P_H

#include <qt/QtCore/QObject>
#include <qt/QtCore/QByteArray>
#include <qt/QtCore/QList>
#include <qt/QtCore/QMap>
#include <qt/QtCore/QString>
#include <qt/QtCore/QStringList>
#include <qt/QtCore/QVariant>
#include <qt/QtDBus/QtDBus>

/*
 * Proxy class for interface org.openobex.Manager
 */
class OrgOpenobexManagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.openobex.Manager"; }

public:
    OrgOpenobexManagerInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgOpenobexManagerInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> RegisterAgent(const QDBusObjectPath &in0)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(in0);
        return asyncCallWithArgumentList(QStringLiteral("RegisterAgent"), argumentList);
    }

    inline QDBusPendingReply<> UnregisterAgent(const QDBusObjectPath &in0)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(in0);
        return asyncCallWithArgumentList(QStringLiteral("UnregisterAgent"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void SessionCreated(const QDBusObjectPath &in0);
    void SessionRemoved(const QDBusObjectPath &in0);
    void TransferCompleted(const QDBusObjectPath &in0, bool in1);
    void TransferStarted(const QDBusObjectPath &in0);
};

namespace org {
  namespace openobex {
    typedef ::OrgOpenobexManagerInterface Manager;
  }
}
#endif
