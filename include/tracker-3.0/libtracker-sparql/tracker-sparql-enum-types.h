
/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */

#pragma once

            #include <glib-object.h>
            #include <libtracker-sparql/tracker-version.h>


            G_BEGIN_DECLS

/* enumerations from "tracker-connection.h" */

TRACKER_AVAILABLE_IN_ALL
GType tracker_sparql_connection_flags_get_type (void);
#define TRACKER_TYPE_SPARQL_CONNECTION_FLAGS (tracker_sparql_connection_flags_get_type())

TRACKER_AVAILABLE_IN_ALL
GType tracker_serialize_flags_get_type (void);
#define TRACKER_TYPE_SERIALIZE_FLAGS (tracker_serialize_flags_get_type())

TRACKER_AVAILABLE_IN_ALL
GType tracker_deserialize_flags_get_type (void);
#define TRACKER_TYPE_DESERIALIZE_FLAGS (tracker_deserialize_flags_get_type())

/* enumerations from "tracker-enums.h" */

TRACKER_AVAILABLE_IN_ALL
GType tracker_rdf_format_get_type (void);
#define TRACKER_TYPE_RDF_FORMAT (tracker_rdf_format_get_type())

/* enumerations from "tracker-error.h" */

TRACKER_AVAILABLE_IN_ALL
GType tracker_sparql_error_get_type (void);
#define TRACKER_TYPE_SPARQL_ERROR (tracker_sparql_error_get_type())

/* enumerations from "tracker-notifier.h" */

TRACKER_AVAILABLE_IN_ALL
GType tracker_notifier_event_type_get_type (void);
#define TRACKER_TYPE_NOTIFIER_EVENT_TYPE (tracker_notifier_event_type_get_type())

G_END_DECLS

/* Generated data ends here */

