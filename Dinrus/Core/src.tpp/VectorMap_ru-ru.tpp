topic "Класс VectorMap";
[i448;a25;kKO9;2 $$1,0#37138531426314131252341829483380:class]
[l288;2 $$2,0#27521748481378242620020725143825:desc]
[0 $$3,0#96390100711032703541132217272105:end]
[H6;0 $$4,0#05600065144404261032431302351956:begin]
[i448;a25;kKO9;2 $$5,0#37138531426314131252341829483370:item]
[l288;a4;*@5;1 $$6,6#70004532496200323422659154056402:requirement]
[l288;i1121;b17;O9;~~~.1408;2 $$7,0#10431211400427159095818037425705:param]
[i448;b42;O9;2 $$8,8#61672508125594000341940100500538:tparam]
[b42;2 $$9,9#13035079074754324216151401829390:normal]
[2 $$0,0#00000000000000000000000000000000:Default]
[{_}%RU-RU 
[ {{10000@(113.42.0) [s0; [*@7;4 Класс VectorMap]]}}&]
[s3; &]
[s1;:noref:%- [@(0.0.255)3 template][3 _<][@(0.0.255)3 class][3 _][*@4;3 K][3 , 
][@(0.0.255)3 class][3 _][*@4;3 T][3 , ][@(0.0.255)3 class][3 _][*@4;3 HashFn][3 _`=_StdHash][@(0.0.255)3 <
][*@4;3 K][@(0.0.255)3 >][3 _>]&]
[s1;:VectorMap`:`:class:%- [@(0.0.255) class]_[* VectorMap]_:_[@(0.0.255) public]_[*_^MoveableAndDeepCopyOption^@3 M
oveableAndDeepCopyOption][@(0.0.255) <][* VectorMap][@(0.0.255) <][*@4 K], 
[*@4 T], [*@4 HashFn][@(0.0.255) >]_>, [@(0.0.255) public]_[*_^AMap^@3 AMap][@(0.0.255) <]_[*@4 K
], [*@4 T], [_^Vector^ Vector][@(0.0.255) <][*@4 T][@(0.0.255) >], [*@4 HashFn]_>_&]
[s0;%- &]
[s8; [*@4 K]-|Тип ключей. У K должен иметься 
конструктор глубокой копии, он должен 
быть [/^topic`:`/`/Core`/srcdoc`/Moveable`_ru`-ru^ moveable] 
и иметь оператор `=`=.&]
[s8; [*@4 T]-|Тип элементов, сохраняемых в Vector. 
T обязательно должен быть [/^topic`:`/`/Core`/srcdoc`/Moveable`_ru`-ru^ m
oveable][/  ]и иметь либо [/^topic`:`/`/Core`/srcdoc`/pick`_`_ru`-ru^ кон
структор глубокой копии], [/^topic`:`/`/Core`/srcdoc`/pick`_`_ru`-ru^ п
ик`-конструктор] или [/ дефолтный конструктор].
&]
[s8; [*@4 HashFn]-|Класс хэширования. Должен иметь 
определение unsigned operator()(const K`& x) `- метода, 
возвращающего хэш`-значение для элементов.&]
[s0; &]
[s9; Векторная разновидность мапа. Наследует 
большую часть своей функциональности 
от [^topic`:`/`/Core`/src`/AMap`_ru`-ru^ AMap] и добавляет 
только методы, специфичные для этой 
разновидности.&]
[s9; Как любой иной контейнер NTL, VectorMap 
является типом [*/^topic`:`/`/Core`/srcdoc`/Moveable`_ru`-ru^ moveable
][*/  ]с семантикой трансфера [*/^topic`:`/`/Core`/srcdoc`/pick`_`_ru`-ru^  
пик и необязательная глубокая копия]. 
Вывоз методов `"пикнутого`" VectorMap`'а 
является логической ошибкой, за исключением
:&]
[s9;C+75 &]
[s0; [*C+75 void operator`=(pick`_ VectorMap`& ][*C@3+75 v][*C+75 ) ][*/C+75 (defined 
by composition)]&]
[s0; [*C+75 void operator<<`=(const AMap`& ][*C@3+75 v][*C+75 ) ][*/C+75 (defined 
in AMap)]&]
[s0; [*C+75 void Clear()]&]
[s0; [*C+75 bool IsPicked() const]&]
[s0;C+75 &]
[s9; Необязательный оператор глубокой 
копии наследуется от класса AMap. Пик`-оператор
 неявно определён композицией.&]
[s3; &]
[s0; &]
[ {{10000F(128)G(128)@1 [s0; [* Детали Конструктора]]}}&]
[s3;%- &]
[s5;:VectorMap`:`:VectorMap`(`):%- [* VectorMap]()&]
[s2; Дефолтный конструктор. Конструирует 
пустой [* VectorMap].&]
[s3; &]
[s4;%- &]
[s5;:Upp`:`:VectorMap`:`:VectorMap`(std`:`:initializer`_list`<std`:`:pair`<K`,T`>`>`):%- [* V
ectorMap]([_^http`:`/`/en`.cppreference`.com`/w`/cpp`/utility`/initializer`_list^ s
td`::initializer`_list]<[_^http`:`/`/en`.cppreference`.com`/w`/cpp`/utility`/pair^ s
td`::pair]<[*@4 K], [*@4 T]>>_[*@3 init])&]
[s2; Инициализация C`+`+ 11.&]
[s3; &]
[s4;%- &]
[s5;:Upp`:`:VectorMap`:`:operator`(`)`(KK`&`&`,TT`&`&`):%- [@(0.0.255) template]_<[@(0.0.255) c
lass]_[*@4 KK], [@(0.0.255) class]_[*@4 TT]>_[_^Upp`:`:VectorMap^ VectorMap][@(0.0.255) `&]_
[* operator()]([*@4 KK][@(0.0.255) `&`&]_[*@3 k], [*@4 TT][@(0.0.255) `&`&]_[*@3 v])&]
[s2; То же, что и Add([%-*@3 k], [%-*@3 v]), возвращает 
`*this. Синтактический сахар для создания 
мапа. Заметьте использование универсальной 
ссылки, разрешающейся в корректный 
вариант Add.&]
[s3; &]
[s4;%- &]
[s5;:VectorMap`:`:VectorMap`(const VectorMap`&`,int`):%- [* VectorMap]([@(0.0.255) const]_
[* VectorMap][@(0.0.255) `&]_[*@3 s], [@(0.0.255) int])&]
[s2; Опциональный конструктор глубокой 
копии.&]
[s6; Требует наличия у T конструктора 
глубокой копии и конструктора  ОГК.&]
[s7; [%-*@3 s][%- -|]Исходный [* VectorMap].&]
[s3; &]
[s4;%- &]
[s5;:Upp`:`:VectorMap`:`:VectorMap`(Upp`:`:Index`<K`>`&`&`,Upp`:`:Vector`<T`>`&`&`):%- [* V
ectorMap]([_^Upp`:`:Index^ Index]<[*@4 K]>`&`&_[*@3 ndx], [_^Upp`:`:Vector^ Vector]<[*@4 T]>
`&`&_[*@3 val])&]
[s2; Пик`-конструирует [* VectorMap] из [* Index`'а 
]ключей и [* Vector`'а] значений. У обеих 
исходных контейнеров должно быть 
одинаковое число элементов.&]
[s3; &]
[s4;%- &]
[s5;:Upp`:`:VectorMap`:`:VectorMap`(Upp`:`:Vector`<K`>`&`&`,Upp`:`:Vector`<T`>`&`&`):%- [* V
ectorMap]([_^Upp`:`:Vector^ Vector]<[*@4 K]>`&`&_[*@3 ndx], [_^Upp`:`:Vector^ Vector]<[*@4 T
]>`&`&_[*@3 val])&]
[s2; Пик`-конструирует [* VectorMap] из [* Vector`'а] 
ключей и [* Vector`'а] значений. У обеих 
исходных контейнеров должно быть 
одинаковое число элементов.&]
[s0; &]
[ {{10000F(128)G(128)t/25b/25@1 [s0;%- [* Список Публичных Членов]]}}&]
[s3;%- &]
[s5;:VectorMap`:`:Pop`(`):%- [*@4 T]_[* Pop]()&]
[s2; Роняет последний элемент VectorMap`'а 
и возвращает его значение.&]
[s7; [*/ Возвратное значение]-|Значение уроненного 
элемента.&]
[s3; &]
[s0; ]]